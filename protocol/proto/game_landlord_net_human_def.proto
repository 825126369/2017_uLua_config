package game_landlord_net_human_protocol; 

enum e_server_msg_type {
	//------------CS------------------
    e_mst_start_c2l = 10000;
	e_mst_c2l_enter_room=10001;//进入房间	
	e_mst_c2l_get_room_scene_info=10002;//请求场景信息
	e_mst_c2l_check_state=10003;//检查游戏状态
	e_mst_c2l_leave_room=10004;//离开战场
	e_mst_c2l_rob_landlord=10005;//抢地主
	e_mst_c2l_playhand=10006;//出牌
	e_mst_c2l_start_match=10007;//开始匹配队伍
	e_mst_c2l_Hang=10008;//请求托管
	e_mst_c2l_SystemTalk=10009;//说个玩笑话
	e_mst_c2l_roomlist=10010;//获取房间列表信息

	e_mst_c2l_add_robot=10011;
	e_mst_c2l_kich_player=10012;
	e_mst_c2l_or_prepare=10013;
	e_mst_c2l_join_player_list=10014;
	e_mst_c2l_join_room=10015;
	e_mst_c2l_or_agree_join_room=10016;	
	e_mst_c2l_create_room=10017;
    e_mst_c2l_set_room_rule=10018;
	e_mst_c2l_change_desk=10019;//请求换凳子	
	
	//------------SC-------------------
	e_mst_start_l2c = 15000;

	e_mst_l2c_enter_room=15001;
	e_mst_l2c_get_room_scene_info=15002;
	e_mst_l2c_check_state=15003;
	e_mst_l2c_leave_room=15004;
	e_mst_l2c_start_match_result=15005;
	e_mst_l2c_Hang=15006;
	e_mst_l2c_roomlist=15007;
	e_mst_l2c_add_robot=15008;
	e_mst_l2c_kich_player=15009;
	e_mst_l2c_join_player_list_result=15010;
	e_mst_l2c_join_room_result=15011;
	e_mst_l2c_or_agree_join_room_result=15012;
	e_mst_l2c_create_room=15013;
 	e_mst_l2c_set_room_rule=15014;
	e_mst_l2c_change_desk=15015;

	e_mst_l2c_notice_startgame=15101;//通知开始游戏
	e_mst_l2c_notice_playhand=15102;//通知其他人出牌信息
	e_mst_l2c_notice_rob_landlord=15103;//通知抢地主啦
	e_mst_l2c_notice_winlose=15104;//通知输赢
	e_mst_l2c_notice_rob_landlord_result=15105;//其他人抢地主的结果
	e_mst_l2c_notice_who_playhand=15106;//通知谁出牌
	e_mst_l2c_notice_SystemTalk=15107;//通知玩家说话

	e_mst_l2c_notice_room_enter_leave_info=15108;//房间内玩家进出变化
	e_mst_l2c_notice_room_prepare_info=15109;//房间内玩家准备信息情况
	e_mst_l2c_notice_room_change_info=15110;//房间外 房间信息改变情况
	e_mst_l2c_notice_invite_room_list=15111;//邀请房间列表
	e_mst_clend_index = 20000;
}

enum e_server_error_code
{
	e_error_code_success=1;
	e_error_code_failed=2;
	e_error_code_not_enough_money=3;
}

enum e_game_state
{
	e_game_state_none=0;//桌子空闲阶段	
	e_game_state_matching=1;//匹配阶段
	e_game_state_startgame=2;//开始游戏
	e_game_state_sendcarding=3;//发牌过程
	e_game_state_robLandlore=4;//抢地主阶段
	e_game_state_playhand=5;//出牌	
	e_game_state_award=6;//游戏结束
}

enum e_player_game_state
{
	e_player_game_state_none=0;
	e_player_game_state_matching=1;
	e_player_game_state_sendcarding=2;
	e_player_game_state_robLandlord=3;
	e_player_game_state_other_robLandlord=4;	
	e_player_game_state_playhanding=5;
	e_player_game_state_other_playhanding=6;
	e_player_game_state_awarding=7;
}


message card_Info
{
	optional int32 deskId=1;
	repeated int32 cards=2;
}

message card_Info_1
{
	optional int32 deskId=1;
	optional int32 cards_count=2;
}

message desk_award_Info
{
	optional int32 deskId=1;
	optional int32 win_count=2;
}

//玩家信息
message player_info 
{
	optional int32 player_id = 1;				//玩家ID
	optional string player_nickname = 2;		//玩家昵称
	optional int32 player_head_frame = 3;		//头像
	optional string player_head_custom = 4;		//玩家头像
	optional int64 player_gold = 5;				//玩家金币
	optional int32 player_sex = 6;				//玩家性别	
	optional int32 player_vip_lv = 7;			//Vip等级
	optional int32 deskId=8;					//凳子ID
	optional bool orPrepare=9;					//是否准备
}

//房间信息
message room_info 
{
	optional int32 room_id = 1;				//房间ID
	optional string roomName= 2;			//房间名
	optional int32 player_count=3; 			//房间人数
	optional int32 room_state=4;			//1：准备，2：开始游戏
	optional bool orNeedPassword=5;			//是否需要密码	
	optional bool orShuffle=6; //是否洗牌			
}

//邀请信息
message invitation_info 
{
	optional player_info senderInfo = 1;	//发送邀请的玩家信息
	optional int32 roomId = 2; 			//房间Id
}
